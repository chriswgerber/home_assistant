---

- name: Re-assemble automation.yaml from dir
  ansible.builtin.assemble:
    src: "{{ hass_a8n_config_path }}"
    dest: "{{ hass_a8n_config_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh automation.yaml
  notify: restart home assistant

- name: Re-assemble cameras.yaml from dir
  ansible.builtin.assemble:
    src: "{{ hass_cameras_path }}"
    dest: "{{ hass_cameras_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh cameras.yaml
  notify: restart home assistant

- name: Re-assemble command_line.yaml from dir
  ansible.builtin.assemble:
    src: "{{ hass_cmdline_path }}"
    dest: "{{ hass_cmdline_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh command_line.yaml
  notify: restart home assistant

- name: Re-assemble device_trackers.yml from dir
  ansible.builtin.assemble:
    src: "{{ hass_trackers_path }}"
    dest: "{{ hass_trackers_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh device_trackers.yaml
  notify: restart home assistant

- name: Re-assemble restful.yaml from dir
  ansible.builtin.assemble:
    src: "{{ hass_restful_path }}"
    dest: "{{ hass_restful_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh restful.yaml
  notify: restart home assistant

- name: Re-assemble scenes.yaml from dir
  ansible.builtin.assemble:
    src: "{{ hass_scenes_path }}"
    dest: "{{ hass_scenes_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh scenes.yaml
  notify: restart home assistant

- name: Re-assemble sensors.yml from dir
  ansible.builtin.assemble:
    src: "{{ hass_sensors_path }}"
    dest: "{{ hass_sensors_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh sensors.yaml
  notify: restart home assistant

- name: Re-assemble templates.yml from dir
  ansible.builtin.assemble:
    src: "{{ hass_templates_path }}"
    dest: "{{ hass_templates_file }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  listen: refresh templates.yaml
  notify: restart home assistant

- name: Check if Config is valid
  ansible.builtin.uri:
    url: "{{ hass_url }}/api/config/core/check_config"
    method: POST
    body: "{}"
    force: true
    headers:
      Authorization: Bearer {{ hass_cli_key }}
    body_format: json
  delegate_to: "{{ hass_handler_command_host }}"
  register: hass_config_resp
  listen: perform hass reload

- name: Set Config Check body
  ansible.builtin.set_fact:
    hass_config_check: "{{ hass_config_resp.content | from_yaml }}"

- name: Set Config vars
  ansible.builtin.set_fact:
    hass_config_is_valid: "{{ hass_config_check.result == 'valid' | bool }}"

- name: Print Config Check Errors, if found
  ansible.builtin.debug:
    msg: "Error verifying configuration: {{ hass_config_check.errors }}"
  when: not hass_config_is_valid | bool

- when: hass_config_is_valid | bool
  block:

    - name: Reload HASS Configuration
      ansible.builtin.uri:
        url: "{{ hass_url }}/api/services/homeassistant/reload_all"
        method: POST
        body: "{}"
        force: true
        headers:
          Authorization: Bearer {{ hass_cli_key }}
        body_format: json
      delegate_to: "{{ hass_handler_command_host }}"
      listen: perform hass reload

    - name: Reload HASS Configuration
      ansible.builtin.uri:
        url: "{{ hass_url }}/api/services/homeassistant/restart"
        method: POST
        body: "{}"
        force: true
        headers:
          Authorization: Bearer {{ hass_cli_key }}
        body_format: json
      delegate_to: "{{ hass_handler_command_host }}"
      listen: restart home assistant
